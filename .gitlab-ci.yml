stages:
  - build
  - publish
  - deploy

cache:
  paths:
    - node_modules/

build:
  tags:
    - universe
  stage: build
  image:
    name: node:14.18.2
  script:
    - npm install
  only:
    - develop
    - main
  artifacts:
    paths:
      - node_modules/

publish:
  tags:
    - universe
  stage: publish
  before_script:
    - docker version
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - develop
    - main

deploy:
  tags:
    - universe
  stage: deploy
  only:
    - develop
    - main
  before_script:
    - apk update && apk add openssh-client bash
  script:
    - eval $(ssh-agent -s)
    - bash -c 'ssh-add <(echo "$SSH_PRIVATE_KEY")'
    - mkdir -p ~/.ssh
    - ssh-keyscan -H $SSH_SERVER_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - >
      ssh $SSH_USER@$SSH_SERVER_IP
      "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY;
      cd $PATH_TO_PROJECT;
      docker pull $CI_REGISTRY_IMAGE:latest;
      docker-compose up -d;
      docker image prune -f;"
